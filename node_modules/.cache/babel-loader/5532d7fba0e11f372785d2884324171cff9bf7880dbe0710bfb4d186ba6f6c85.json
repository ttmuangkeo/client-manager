{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down',\n      // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","tag","type","String","default","description","titleTag","title","direction","icon","titleClasses","Object","Array","menuClasses","menuOnRight","Boolean","hasToggle","data","isOpen","methods","toggleDropDown","$emit","closeDropDown"],"sources":["src/components/BaseDropdown.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[{ show: isOpen }, `drop${direction}`]\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"btn-rotate\"\n        :class=\"[{'dropdown-toggle': hasToggle}, titleClasses]\"\n        :aria-expanded=\"isOpen\"\n        data-toggle=\"dropdown\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i> {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down', // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown {\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;EACAA,IAAA;EACAC,KAAA;IACAC,GAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAC,QAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAE,KAAA;MACAL,IAAA,EAAAC,MAAA;MACAE,WAAA;IACA;IACAG,SAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;MAAA;MACAC,WAAA;IACA;IACAI,IAAA;MACAP,IAAA,EAAAC,MAAA;MACAE,WAAA;IACA;IACAK,YAAA;MACAR,IAAA,GAAAC,MAAA,EAAAQ,MAAA,EAAAC,KAAA;MACAP,WAAA;IACA;IACAQ,WAAA;MACAX,IAAA,GAAAC,MAAA,EAAAQ,MAAA;MACAN,WAAA;IACA;IACAS,WAAA;MACAZ,IAAA,EAAAa,OAAA;MACAV,WAAA;IACA;IACAW,SAAA;MACAd,IAAA,EAAAa,OAAA;MACAV,WAAA;MACAD,OAAA;IACA;EACA;EACAa,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MACA,KAAAF,MAAA,SAAAA,MAAA;MACA,KAAAG,KAAA,gBAAAH,MAAA;IACA;IACAI,aAAA,WAAAA,cAAA;MACA,KAAAJ,MAAA;MACA,KAAAG,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}