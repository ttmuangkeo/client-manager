{"ast":null,"code":"import Sidebar from './SideBar.vue';\nimport SidebarItem from './SidebarItem.vue';\nvar SidebarStore = {\n  showSidebar: false,\n  sidebarLinks: [],\n  isMinimized: false,\n  displaySidebar: function displaySidebar(value) {\n    this.showSidebar = value;\n  },\n  toggleMinimize: function toggleMinimize() {\n    document.body.classList.toggle('sidebar-mini');\n    // we simulate the window Resize so the charts will get updated in realtime.\n    var simulateWindowResize = setInterval(function () {\n      window.dispatchEvent(new Event('resize'));\n    }, 180);\n\n    // we stop the simulation of Window Resize after the animations are completed\n    setTimeout(function () {\n      clearInterval(simulateWindowResize);\n    }, 1000);\n    this.isMinimized = !this.isMinimized;\n  }\n};\nvar SidebarPlugin = {\n  install: function install(Vue, options) {\n    if (options && options.sidebarLinks) {\n      SidebarStore.sidebarLinks = options.sidebarLinks;\n    }\n    var app = new Vue({\n      data: {\n        sidebarStore: SidebarStore\n      }\n    });\n    Vue.prototype.$sidebar = app.sidebarStore;\n    Vue.component('side-bar', Sidebar);\n    Vue.component('sidebar-item', SidebarItem);\n  }\n};\nexport default SidebarPlugin;","map":{"version":3,"names":["Sidebar","SidebarItem","SidebarStore","showSidebar","sidebarLinks","isMinimized","displaySidebar","value","toggleMinimize","document","body","classList","toggle","simulateWindowResize","setInterval","window","dispatchEvent","Event","setTimeout","clearInterval","SidebarPlugin","install","Vue","options","app","data","sidebarStore","prototype","$sidebar","component"],"sources":["/Users/timmuangkeo/Desktop/fork/client-manager/src/components/SidebarPlugin/index.js"],"sourcesContent":["import Sidebar from './SideBar.vue';\nimport SidebarItem from './SidebarItem.vue';\n\nconst SidebarStore = {\n  showSidebar: false,\n  sidebarLinks: [],\n  isMinimized: false,\n  displaySidebar(value) {\n    this.showSidebar = value;\n  },\n  toggleMinimize() {\n    document.body.classList.toggle('sidebar-mini');\n    // we simulate the window Resize so the charts will get updated in realtime.\n    const simulateWindowResize = setInterval(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 180);\n\n    // we stop the simulation of Window Resize after the animations are completed\n    setTimeout(() => {\n      clearInterval(simulateWindowResize);\n    }, 1000);\n\n    this.isMinimized = !this.isMinimized;\n  }\n};\n\nconst SidebarPlugin = {\n  install(Vue, options) {\n    if (options && options.sidebarLinks) {\n      SidebarStore.sidebarLinks = options.sidebarLinks;\n    }\n    let app = new Vue({\n      data: {\n        sidebarStore: SidebarStore\n      }\n    });\n    Vue.prototype.$sidebar = app.sidebarStore;\n    Vue.component('side-bar', Sidebar);\n    Vue.component('sidebar-item', SidebarItem);\n  }\n};\n\nexport default SidebarPlugin;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,WAAW,MAAM,mBAAmB;AAE3C,IAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,EAAE;EAChBC,WAAW,EAAE,KAAK;EAClBC,cAAc,WAAAA,eAACC,KAAK,EAAE;IACpB,IAAI,CAACJ,WAAW,GAAGI,KAAK;EAC1B,CAAC;EACDC,cAAc,WAAAA,eAAA,EAAG;IACfC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;IAC9C;IACA,IAAMC,oBAAoB,GAAGC,WAAW,CAAC,YAAM;MAC7CC,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,EAAE,GAAG,CAAC;;IAEP;IACAC,UAAU,CAAC,YAAM;MACfC,aAAa,CAACN,oBAAoB,CAAC;IACrC,CAAC,EAAE,IAAI,CAAC;IAER,IAAI,CAACR,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;AACF,CAAC;AAED,IAAMe,aAAa,GAAG;EACpBC,OAAO,WAAAA,QAACC,GAAG,EAAEC,OAAO,EAAE;IACpB,IAAIA,OAAO,IAAIA,OAAO,CAACnB,YAAY,EAAE;MACnCF,YAAY,CAACE,YAAY,GAAGmB,OAAO,CAACnB,YAAY;IAClD;IACA,IAAIoB,GAAG,GAAG,IAAIF,GAAG,CAAC;MAChBG,IAAI,EAAE;QACJC,YAAY,EAAExB;MAChB;IACF,CAAC,CAAC;IACFoB,GAAG,CAACK,SAAS,CAACC,QAAQ,GAAGJ,GAAG,CAACE,YAAY;IACzCJ,GAAG,CAACO,SAAS,CAAC,UAAU,EAAE7B,OAAO,CAAC;IAClCsB,GAAG,CAACO,SAAS,CAAC,cAAc,EAAE5B,WAAW,CAAC;EAC5C;AACF,CAAC;AAED,eAAemB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}