{"remainingRequest":"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timmuangkeo/Desktop/fork/client-manager/src/views/Starter/ApiKeyGenerator.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/timmuangkeo/Desktop/fork/client-manager/src/views/Starter/ApiKeyGenerator.vue","mtime":1706169924666},{"path":"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/babel-loader/lib/index.js","mtime":1706171926651},{"path":"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/cache-loader/dist/cjs.js","mtime":1706171925892},{"path":"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/vue-loader/lib/index.js","mtime":1706171925771}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport Organization from \"../Layout/Organization.vue\";\nimport BaseHeader from \"../../components/BaseHeader.vue\";\nexport default {\n  data() {\n    return {\n      data: \"\",\n      TOKEN: \"\",\n      authToken: \"\",\n      orgId: \"\",\n      orgGuid: \"\",\n      keyName: \"\",\n      payload: \"\",\n    };\n  },\n  components: {\n    Organization,\n    BaseHeader,\n  },\n  methods: {\n    getUsers() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Users/me?tenant=sandbox01\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          if(res.status === 200) {\n            const self = this;\n            self.$store.commit(\"updateUser\", res.data);\n            this.authorization(res.data.contexts[0].guid);\n          }\n        })\n        .catch((err) => {\n            if (err.response.status === 401) {\n              alert(err.response.status + \" Bad Bearer Token\")\n            }\n        });\n    },\n    authorization(guid) {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Authorization\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .post(ENDPOINT, { contextId: guid })\n        .then((res) => {\n          console.log(res);\n          this.authToken = res.data.token;\n          this.getOrg(res.data.token);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    getOrg(token) {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Organizations/external/\" + this.orgId;\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + token,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          const self = this;\n          self.$store.commit(\"updateOrganization\", res.data.payload);\n          this.orgGuid = res.data.payload.guid;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    createApiKey() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Users/system/\";\n      const self = this;\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .post(ENDPOINT, {\n          name: self.$store.getters.organzation.name + ' ' + self.$store.getters.organzation.tenant.code + ' ' + this.keyName,\n          organizationId: this.orgGuid,\n          roleId: \"d6508641-2b1e-4654-8133-bc7b01d91d36\",\n          publicKey: \"\",\n        })\n        .then((res) => {\n          console.log(res);\n          this.payload = res.data.payload.apiKeys[0];\n        })\n        .catch((err) => {\n          console.log(err.status);\n        });\n    },\n    getOrgUser() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Organizations/\" + this.orgGuid + \"/users\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          console.log(res);\n          const self = this;\n          self.$store.commit(\"updateOrganizationUsers\", res.data.payload);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    deleteKeys(name, contextId) {\n      // const BASEURL = \"https://directory-dev.loanpal.services/\";\n      // const ENDPOINT = 'Users/contexts' + this.orgGuid\n      // if (confirm(\"Deleting \" + name + \"are you sure?\")) {\n      //   console.log(contextId);\n      // }\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = 'Users/contexts/' + this.orgGuid\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .delete(ENDPOINT)\n        .then((res) => {\n          if (confirm(\"Deleting \" + name + \"are you sure?\")) {\n            console.log(res)\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n  },\n};\n",{"version":3,"sources":["ApiKeyGenerator.vue"],"names":[],"mappingsfile":"ApiKeyGenerator.vue","sourceRoot":"src/views/Starter","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-4 bg-transparent\">\n      <h1>API Key Generator</h1>\n    </base-header>\n    <b-container fluid>\n      <b-row>\n        <!-- <b-col xl=\"9\" class=\"order-xl-2 mb-5\">\n          <Organization></Organization>\n        </b-col> -->\n        <b-col xl=\"4\" class=\"order-xl-1\">\n          <template>\n            <card>\n              <b-form>\n                <div class=\"pl-lg-4\">\n                  <b-row>\n                    <b-col lg=\"12\">\n                      <base-input\n                        type=\"Text\"\n                        label=\"Organization ID\"\n                        placeholder=\"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n                        v-model=\"orgId\"\n                        @blur=\"getOrgUser\"\n                      >\n                      </base-input>\n                      <div v-show=\"orgId\">\n                        <p v-html=\"$store.getters.organzation.name\"></p>\n                      </div>\n                    </b-col>\n                    <b-col lg=\"12\">\n                      <base-input\n                        type=\"Text\"\n                        label=\"Origin Bearer Token\"\n                        placeholder=\"Token\"\n                        v-model=\"TOKEN\"\n                        @blur=\"getUsers\"\n                      >\n                      </base-input>\n                      <p v-html=\"$store.getters.user.name\"></p>\n                      <p v-html=\"$store.getters.user.tenant\"></p>\n                    </b-col>\n                    <b-col lg=\"12\">\n                      <base-input\n                        type=\"Text\"\n                        label=\"Distributor\"\n                        placeholder=\"SOLO\"\n                        v-model=\"keyName\"\n                      >\n                      </base-input>\n                    </b-col>\n                  </b-row>\n                </div>\n                <hr class=\"my-4\" />\n                <a @click=\"createApiKey\" class=\"btn btn-success\">\n                  Create Key\n                </a>\n              </b-form>\n              <hr>\n              <pre>{{ payload }}</pre>\n            </card>\n          </template>\n        </b-col>\n        <b-col xl=\"8\" class=\"order-xl-2\">\n          <b-row lg=\"5\" v-show=\"$store.getters.organzationUsers\">\n            <template>\n              <card>\n            <b-col lg=\"12\"\n              v-for=\"(res, key) in $store.getters.organzationUsers\"\n              :key=\"key\"\n            >\n              <p>name: {{ res.name }}</p> \n              <!-- <p>OrgID: {{ res.apiKeys[0].organizationId }}</p>  -->\n              <!-- <p>ExpirationData: {{ res.apiKeys[key].expirationDate }}</p> -->\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                @click=\"deleteKeys(res.name, res.contextId)\"\n              >\n                Delete\n              </button>\n              <hr>\n            </b-col>\n              </card>\n            </template>\n          </b-row>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport Organization from \"../Layout/Organization.vue\";\nimport BaseHeader from \"../../components/BaseHeader.vue\";\nexport default {\n  data() {\n    return {\n      data: \"\",\n      TOKEN: \"\",\n      authToken: \"\",\n      orgId: \"\",\n      orgGuid: \"\",\n      keyName: \"\",\n      payload: \"\",\n    };\n  },\n  components: {\n    Organization,\n    BaseHeader,\n  },\n  methods: {\n    getUsers() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Users/me?tenant=sandbox01\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          if(res.status === 200) {\n            const self = this;\n            self.$store.commit(\"updateUser\", res.data);\n            this.authorization(res.data.contexts[0].guid);\n          }\n        })\n        .catch((err) => {\n            if (err.response.status === 401) {\n              alert(err.response.status + \" Bad Bearer Token\")\n            }\n        });\n    },\n    authorization(guid) {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Authorization\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .post(ENDPOINT, { contextId: guid })\n        .then((res) => {\n          console.log(res);\n          this.authToken = res.data.token;\n          this.getOrg(res.data.token);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    getOrg(token) {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Organizations/external/\" + this.orgId;\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + token,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          const self = this;\n          self.$store.commit(\"updateOrganization\", res.data.payload);\n          this.orgGuid = res.data.payload.guid;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    createApiKey() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Users/system/\";\n      const self = this;\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .post(ENDPOINT, {\n          name: self.$store.getters.organzation.name + ' ' + self.$store.getters.organzation.tenant.code + ' ' + this.keyName,\n          organizationId: this.orgGuid,\n          roleId: \"d6508641-2b1e-4654-8133-bc7b01d91d36\",\n          publicKey: \"\",\n        })\n        .then((res) => {\n          console.log(res);\n          this.payload = res.data.payload.apiKeys[0];\n        })\n        .catch((err) => {\n          console.log(err.status);\n        });\n    },\n    getOrgUser() {\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = \"Organizations/\" + this.orgGuid + \"/users\";\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          console.log(res);\n          const self = this;\n          self.$store.commit(\"updateOrganizationUsers\", res.data.payload);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    deleteKeys(name, contextId) {\n      // const BASEURL = \"https://directory-dev.loanpal.services/\";\n      // const ENDPOINT = 'Users/contexts' + this.orgGuid\n      // if (confirm(\"Deleting \" + name + \"are you sure?\")) {\n      //   console.log(contextId);\n      // }\n      const BASEURL = \"https://directory-dev.loanpal.services/\";\n      const ENDPOINT = 'Users/contexts/' + this.orgGuid\n      axios\n        .create({\n          baseURL: BASEURL,\n          headers: {\n            \"Content-Type\": \"application/json-patch+json\",\n            Authorization: \"Bearer \" + this.TOKEN,\n          },\n        })\n        .delete(ENDPOINT)\n        .then((res) => {\n          if (confirm(\"Deleting \" + name + \"are you sure?\")) {\n            console.log(res)\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]}]}