{"ast":null,"code":"import _toConsumableArray from \"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport partnerData from \"../../json/client-config.json\";\nimport BaseHeader from \"../../components/BaseHeader.vue\";\nimport Vue from \"vue\";\nimport VueClipboard from \"vue-clipboard2\";\nimport LoanOption from \"./LoanOption.vue\";\nimport NewLoanOption from \"./NewLoanOption.vue\";\nVue.use(VueClipboard);\nexport default {\n  name: \"partnerConfig\",\n  components: {\n    BaseHeader: BaseHeader,\n    VueClipboard: VueClipboard,\n    LoanOption: LoanOption,\n    NewLoanOption: NewLoanOption\n  },\n  data: function data() {\n    return {\n      loanConfig: true,\n      enableAddingNewLoanOption: false,\n      hideLoanOption: false\n    };\n  },\n  mounted: function mounted() {\n    var self = this;\n    if (!this.partnerData) {\n      self.$store.commit(\"updatePartnerData\", partnerData);\n    }\n  },\n  computed: {\n    findTerms: function findTerms() {\n      var self = this;\n      var term = self.$store.getters.partnerData.loanOptions;\n      var newTerm = [];\n      for (var terms in term) {\n        newTerm.push(term[terms].term);\n      }\n      var uniqueTerms = _toConsumableArray(new Set(newTerm));\n      self.$store.commit('updateUniqueTerms', uniqueTerms);\n      return uniqueTerms;\n    }\n  },\n  methods: {\n    onCopy: function onCopy() {\n      this.$notify({\n        type: \"success\",\n        message: \"\"\n      });\n    },\n    getLoanId: function getLoanId(loanId) {\n      console.log(loanId);\n      this.$router.push({\n        name: \"getLoan\",\n        params: {\n          loanId: loanId\n        }\n      });\n    },\n    programFee: function programFee() {\n      var self = this;\n      var getAllFees = [];\n      var getFees = self.$store.getters.partnerData.loanOptions;\n      getFees.forEach(function (fees) {\n        getAllFees.push(fees.programFee);\n      });\n      self.$store.commit(\"updateProgramFee\", getAllFees);\n    },\n    getLatestDealerFee: function getLatestDealerFee(programFee) {\n      return programFee[programFee.length - 1];\n    },\n    isFlexPay: function isFlexPay(data) {\n      if (data.id > 1000) {\n        this.promotionalPeriod1(data);\n      } else {\n        console.log(false);\n      }\n    },\n    promotionalPeriod1: function promotionalPeriod1(data) {\n      if (data.term === \"20\") {\n        console.log(data);\n      }\n    },\n    isString: function isString(programFee, promotionalPeriod) {\n      if (typeof programFee == \"string\") {\n        return programFee;\n      } else if (typeof promotionalPeriod == \"string\") {\n        return promotionalPeriod;\n      }\n    },\n    addLoanOption: function addLoanOption() {\n      var self = this;\n      this.enableAddingNewLoanOption = !this.enableAddingNewLoanOption;\n    },\n    validateSalesforceId: function validateSalesforceId(id) {\n      var salesforce = id.substring(0, 3);\n      return salesforce === '001' ? true : false;\n    },\n    parseOptionMap: function parseOptionMap(index, res) {\n      var self = this;\n      var validated = [];\n      var loanOptionsId = self.$store.getters.partnerData.loanOptions;\n      var _loop = function _loop(ids) {\n        var filtering = res.filter(function (result) {\n          return result === loanOptionsId[ids].id;\n        });\n        if (filtering.length > 0) {\n          validated.push.apply(validated, _toConsumableArray(filtering));\n          self.$store.commit(\"updateOptionList\", validated);\n        }\n      };\n      for (var ids in loanOptionsId) {\n        _loop(ids);\n      }\n      this.loadPartnerData(validated);\n      return null;\n    },\n    loadPartnerData: function loadPartnerData(data) {\n      var _this = this;\n      var self = this;\n      var loanData = self.$store.getters.partnerData.loanOptions;\n      var newPartnerData = [];\n      loanData.forEach(function (res, index) {\n        if (_this.loanConfig && data.includes(res.id)) {\n          newPartnerData.push(res);\n          self.$store.commit(\"updateNewPartnerData\", newPartnerData);\n          // self.$store.commit('updateNewPartnerData', newPartnerData.programFee)\n        } else if (!_this.loanConfig && res.term === data) {\n          newPartnerData.push(res);\n          self.$store.commit(\"updateNewPartnerData\", newPartnerData);\n          // this.newProgramFee(newPartnerData);\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["partnerData","BaseHeader","Vue","VueClipboard","LoanOption","NewLoanOption","use","name","components","data","loanConfig","enableAddingNewLoanOption","hideLoanOption","mounted","self","$store","commit","computed","findTerms","term","getters","loanOptions","newTerm","terms","push","uniqueTerms","_toConsumableArray","Set","methods","onCopy","$notify","type","message","getLoanId","loanId","console","log","$router","params","programFee","getAllFees","getFees","forEach","fees","getLatestDealerFee","length","isFlexPay","id","promotionalPeriod1","isString","promotionalPeriod","addLoanOption","validateSalesforceId","salesforce","substring","parseOptionMap","index","res","validated","loanOptionsId","_loop","ids","filtering","filter","result","apply","loadPartnerData","_this","loanData","newPartnerData","includes"],"sources":["src/views/Starter/PartnerConfig.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- BootstrapVue Done -->\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-transparent\">\n      <h1 v-html=\"$store.getters.partnerData.name\"></h1>\n      <button\n        type=\"button\"\n        class=\"btn\"\n        v-clipboard:copy=\"$store.getters.partnerData.organizationId\"\n        v-clipboard:success=\"onCopy\"\n        title=\"\"\n        data-original-title=\"Copy to clipboard\"\n      >\n        <div>\n          <p>OrgID</p>\n          <span v-html=\"$store.getters.partnerData.organizationId\"></span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn\"\n        v-clipboard:copy=\"$store.getters.partnerData.id\"\n        v-clipboard:success=\"onCopy\"\n        title=\"\"\n        data-original-title=\"Copy to clipboard\"\n      >\n        <div>\n          <div>\n            <p>ID</p>\n            <span v-html=\"$store.getters.partnerData.id\"></span>\n          </div>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn\"\n        v-clipboard:copy=\"$store.getters.partnerData.salesforce.accountId\"\n        v-clipboard:success=\"onCopy\"\n        title=\"\"\n        data-original-title=\"Copy to clipboard\"\n      >\n        <div>\n          <div>\n            <p>Salesforce ID</p>\n            <span v-html=\"$store.getters.partnerData.salesforce.accountId\"></span>\n            <div v-if=\"!validateSalesforceId($store.getters.partnerData.salesforce.accountId)\">\n              <p class=\"text-warning\">not a salesforce ID</p>\n            </div>\n          </div>\n        </div>\n      </button>\n      <div>\n        <ul v-for=\"(fee, key) in $store.getters.programFee\" :key=\"key\">\n          <li>{{ fee + \"%\" }}</li>\n        </ul>\n      </div>\n      <hr />\n      <!-- Card stats -->\n      <b-row>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Vital Info\"\n            type=\"gradient-orange\"\n            :sub-title=\"$store.getters.partnerData.vitalInfo.email\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <p v-html=\"$store.getters.partnerData.vitalInfo.address.city\"></p>\n              <p\n                v-html=\"$store.getters.partnerData.vitalInfo.address.street\"\n                class=\"text-nowrap\"\n              ></p>\n              <p v-html=\"$store.getters.partnerData.vitalInfo.email\"></p>\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Installation Category\"\n            type=\"gradient-green\"\n            :sub-title=\"$store.getters.partnerData.installationCategories\"\n            class=\"mb-4\"\n          >\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n      <button\n        type=\"button\"\n        class=\"btn\"\n        v-clipboard:copy=\"$store.getters.partnerData.communicationOptions.admin\"\n        v-clipboard:success=\"onCopy\"\n        title=\"\"\n        data-original-title=\"Copy to clipboard\"\n      >\n        <div>\n          <p>Admin Email</p>\n          <span v-html=\"$store.getters.partnerData.communicationOptions.admin\"></span>\n        </div>\n      </button>\n        </b-col>\n        <b-col xl=\"2\" md=\"6\">\n          <stats-card\n            title=\"Sub650\"\n            type=\"gradient-green\"\n            :sub-title=\"$store.getters.partnerData.features.sub650\"\n            class=\"mb-4\"\n          >\n          </stats-card>\n        </b-col>\n      </b-row>\n    </base-header>\n    <b-container fluid class=\"mt--6\">\n      <button @click=\"loanConfig = !loanConfig\" class=\"btn btn-secondary mb-4\">\n        mapping/term\n      </button>\n      <button @click=\"addLoanOption\" type=\"button\" class=\"btn btn-success mb-4\">\n        <span>Add New Option</span>\n      </button>\n      <b-row v-show=\"enableAddingNewLoanOption\">\n        <newLoanOption/>\n      </b-row>      \n      <!-- <button @click=\"programFee\" type=\"button\" class=\"btn btn-secondary mb-4\">\n        <span>program fees</span>\n      </button> -->\n      <b-row v-show=\"loanConfig\">\n        <b-col\n          lg=\"1\"\n          v-for=\"(key, res) in $store.getters.partnerData.loanOptionsMap\"\n          :key=\"key\"\n        >\n          <p @click=\"parseOptionMap(res, key)\" class=\"mb-3\">\n            <span class=\"btn\">{{ res }}</span>\n          </p>\n        </b-col>\n      </b-row>\n      <b-row v-show=\"!loanConfig\">\n        <b-col lg=\"2\" v-for=\"(res, key) in findTerms\" :key=\"key\">\n          <p @click=\"loadPartnerData(res)\" class=\"mb-3\">\n            <button\n              type=\"button\"\n              class=\"btn-icon-clipboard\"\n              v-clipboard:success=\"onCopy\"\n              title=\"\"\n              :data-original-title=\"Success\"\n            >\n              <div>Term: \n                <span>{{ res }}</span>\n              </div>\n            </button>\n          </p>\n        </b-col>\n        <!-- <b-col lg=\"2\">\n          <p @click=\"loadPartnerData($store.getters.newPartnerData.loanOptions)\">all</p>\n        </b-col>      -->\n      </b-row>\n    </b-container>\n    <b-container fluid>\n      <loanOption />\n    </b-container>\n  </div>\n</template>\n<script>\nimport partnerData from \"../../json/client-config.json\";\nimport BaseHeader from \"../../components/BaseHeader.vue\";\nimport Vue from \"vue\";\nimport VueClipboard from \"vue-clipboard2\";\nimport LoanOption from \"./LoanOption.vue\";\nimport NewLoanOption from \"./NewLoanOption.vue\";\nVue.use(VueClipboard);\n\nexport default {\n  name: \"partnerConfig\",\n  components: {\n    BaseHeader,\n    VueClipboard,\n    LoanOption,\n    NewLoanOption\n  },\n  data() {\n    return {\n      loanConfig: true,\n      enableAddingNewLoanOption: false,\n      hideLoanOption: false\n    };\n  },\n  mounted() {\n    const self = this;\n    if (!this.partnerData) {\n      self.$store.commit(\"updatePartnerData\", partnerData);\n    }\n  },\n  computed: {\n    findTerms: function () {\n      const self = this;\n      const term = self.$store.getters.partnerData.loanOptions;\n      const newTerm = [];\n      for (const terms in term) {\n        newTerm.push(term[terms].term);\n      }\n      let uniqueTerms = [...new Set(newTerm)];\n      self.$store.commit('updateUniqueTerms', uniqueTerms)\n      return uniqueTerms;\n    },\n  },\n  methods: {\n    onCopy() {\n      this.$notify({\n        type: \"success\",\n        message: \"\",\n      });\n    },\n    getLoanId(loanId) {\n      console.log(loanId);\n      this.$router.push({ name: \"getLoan\", params: { loanId: loanId } });\n    },\n    programFee() {\n      const self = this;\n      const getAllFees = [];\n      const getFees = self.$store.getters.partnerData.loanOptions;\n      getFees.forEach((fees) => {\n        getAllFees.push(fees.programFee);\n      });\n      self.$store.commit(\"updateProgramFee\", getAllFees);\n    },\n    getLatestDealerFee(programFee) {\n      return programFee[programFee.length - 1];\n    },\n    isFlexPay(data) {\n      if (data.id > 1000) {\n        this.promotionalPeriod1(data);\n      } else {\n        console.log(false);\n      }\n    },\n    promotionalPeriod1(data) {\n      if (data.term === \"20\") {\n        console.log(data);\n      }\n    },\n    isString(programFee, promotionalPeriod) {\n      if (typeof programFee == \"string\") {\n        return programFee;\n      } else if (typeof promotionalPeriod == \"string\") {\n        return promotionalPeriod;\n      }\n    },\n    addLoanOption() {\n      const self = this;\n      this.enableAddingNewLoanOption = !this.enableAddingNewLoanOption;\n    },\n    validateSalesforceId(id) {\n      let salesforce = id.substring(0, 3);\n      return (salesforce === '001') ? true : false;\n    },\n    parseOptionMap(index, res) {\n      const self = this;\n      const validated = [];\n      const loanOptionsId = self.$store.getters.partnerData.loanOptions;\n      for (const ids in loanOptionsId) {\n        const filtering = res.filter(\n          (result) => result === loanOptionsId[ids].id\n        );\n        if (filtering.length > 0) {\n          validated.push(...filtering);\n          self.$store.commit(\"updateOptionList\", validated);\n        }\n      }\n      this.loadPartnerData(validated);\n      return null;\n    },\n    loadPartnerData(data) {\n      const self = this;\n      const loanData = self.$store.getters.partnerData.loanOptions;\n      const newPartnerData = [];\n      loanData.forEach((res, index) => {\n        if (this.loanConfig && data.includes(res.id)) {\n          newPartnerData.push(res);\n          self.$store.commit(\"updateNewPartnerData\", newPartnerData);\n          // self.$store.commit('updateNewPartnerData', newPartnerData.programFee)\n        } else if (!this.loanConfig && res.term === data) {\n          newPartnerData.push(res);\n          self.$store.commit(\"updateNewPartnerData\", newPartnerData);\n          // this.newProgramFee(newPartnerData);\n        } else {\n          return null\n        }\n      });\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}