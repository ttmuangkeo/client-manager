{"ast":null,"code":"import _defineProperty from \"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description: 'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description: 'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator: function validator(value) {\n        return ['', 'dark', 'success', 'danger', 'warning', 'white', 'primary', 'light', 'info', 'vue'].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes: function classes() {\n      var color = \"bg-\".concat(this.type);\n      var classes = [{\n        'navbar-transparent': this.transparent\n      }, _defineProperty({}, \"navbar-expand-\".concat(this.expand), this.expand)];\n      if (this.position) {\n        classes.push(\"navbar-\".concat(this.position));\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu: function hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu: function toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu: function closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","show","type","Boolean","default","description","transparent","expand","String","menuClasses","Object","Array","containerClasses","validator","value","includes","model","prop","event","computed","classes","color","concat","_defineProperty","position","push","hasMenu","$slots","methods","toggleMenu","$emit","closeMenu"],"sources":["src/components/Navbar/BaseNav.vue"],"sourcesContent":["<template>\n  <b-navbar toggleable :class=\"classes\">\n    <div :class=\"containerClasses\">\n      <slot name=\"brand\"></slot>\n\n      <slot name=\"toggle-button\">\n        <button\n          class=\"navbar-toggler collapsed\"\n          v-if=\"hasMenu\"\n          type=\"button\"\n          @click=\"toggleMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n        </button>\n      </slot>\n\n      <b-navbar-toggle\n        target=\"nav-text-collapse\"\n        @click.stop=\"toggleMenu\">\n      </b-navbar-toggle>\n\n      <b-collapse\n        is-nav\n        id=\"nav-text-collapse\"\n        class=\"navbar-custom-collapse collapse\"\n        :class=\"menuClasses\"\n        :visible=\"show\"\n        v-click-outside=\"closeMenu\">\n        <slot :close-menu=\"closeMenu\"></slot>\n      </b-collapse>\n    </div>\n  </b-navbar>\n</template>\n<script>\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description:\n        'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description:\n        'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return [\n          '',\n          'dark',\n          'success',\n          'danger',\n          'warning',\n          'white',\n          'primary',\n          'light',\n          'info',\n          'vue'\n        ].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { 'navbar-transparent': this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand }\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style></style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;MACAC,WAAA,EACA;IACA;IACAC,WAAA;MACAJ,IAAA,EAAAC,OAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAE,MAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAC,WAAA;IACA;IACAI,WAAA;MACAP,IAAA,GAAAM,MAAA,EAAAE,MAAA,EAAAC,KAAA;MACAP,OAAA;MACAC,WAAA,EACA;IACA;IACAO,gBAAA;MACAV,IAAA,GAAAM,MAAA,EAAAE,MAAA,EAAAC,KAAA;MACAP,OAAA;MACAC,WAAA,EACA;IACA;IACAH,IAAA;MACAA,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAS,SAAA,WAAAA,UAAAC,KAAA;QACA,QACA,IACA,QACA,WACA,UACA,WACA,SACA,WACA,SACA,QACA,MACA,CAAAC,QAAA,CAAAD,KAAA;MACA;MACAT,WAAA;IACA;EACA;EACAW,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,IAAAC,KAAA,SAAAC,MAAA,MAAApB,IAAA;MACA,IAAAkB,OAAA,IACA;QAAA,2BAAAd;MAAA,GAAAiB,eAAA,sBAAAD,MAAA,CACA,KAAAf,MAAA,QAAAA,MAAA,EACA;MACA,SAAAiB,QAAA;QACAJ,OAAA,CAAAK,IAAA,WAAAH,MAAA,MAAAE,QAAA;MACA;MACA,UAAAlB,WAAA;QACAc,OAAA,CAAAK,IAAA,CAAAJ,KAAA;MACA;MACA,OAAAD,OAAA;IACA;IACAM,OAAA,WAAAA,QAAA;MACA,YAAAC,MAAA,CAAAvB,OAAA;IACA;EACA;EACAwB,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAC,KAAA,iBAAA7B,IAAA;IACA;IACA8B,SAAA,WAAAA,UAAA;MACA,KAAAD,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}