{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\"\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: \"Whether checkbox is checked\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether checkbox is disabled\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether checkbox is inline\"\n    },\n    inputClasses: {\n      type: [String, Object, Array],\n      description: \"Checkbox input classes\"\n    },\n    type: {\n      type: String,\n      description: 'Checkbox type (e.g info, danger etc)'\n    }\n  },\n  data: function data() {\n    return {\n      cbId: \"\",\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get: function get() {\n        return this.checked;\n      },\n      set: function set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      }\n    },\n    inlineClass: function inlineClass() {\n      if (this.inline) {\n        return \"form-check-inline\";\n      }\n    }\n  },\n  created: function created() {\n    this.cbId = Math.random().toString(16).slice(2);\n  }\n};","map":{"version":3,"names":["name","model","prop","props","checked","type","Array","Boolean","description","disabled","inline","inputClasses","String","Object","data","cbId","touched","computed","get","set","check","$emit","inlineClass","created","Math","random","toString","slice"],"sources":["src/components/Inputs/BaseCheckbox.vue"],"sourcesContent":["<template>\n  <div class=\"custom-control custom-checkbox\"\n       :class=\"[\n       {disabled: disabled},\n       {[`custom-checkbox-${type}`]: type},inlineClass]\">\n    <input :id=\"cbId\"\n           class=\"custom-control-input\"\n           :class=\"inputClasses\"\n           type=\"checkbox\"\n           :disabled=\"disabled\"\n           v-model=\"model\"/>\n    <label :for=\"cbId\" class=\"custom-control-label\">\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\n  export default {\n    name: \"base-checkbox\",\n    model: {\n      prop: \"checked\"\n    },\n    props: {\n      checked: {\n        type: [Array, Boolean],\n        description: \"Whether checkbox is checked\"\n      },\n      disabled: {\n        type: Boolean,\n        description: \"Whether checkbox is disabled\"\n      },\n      inline: {\n        type: Boolean,\n        description: \"Whether checkbox is inline\"\n      },\n      inputClasses: {\n        type: [String, Object, Array],\n        description: \"Checkbox input classes\"\n      },\n      type: {\n        type: String,\n        description: 'Checkbox type (e.g info, danger etc)'\n      }\n    },\n    data() {\n      return {\n        cbId: \"\",\n        touched: false\n      };\n    },\n    computed: {\n      model: {\n        get() {\n          return this.checked;\n        },\n        set(check) {\n          if (!this.touched) {\n            this.touched = true;\n          }\n          this.$emit(\"input\", check);\n        }\n      },\n      inlineClass() {\n        if (this.inline) {\n          return `form-check-inline`;\n        }\n      }\n    },\n    created() {\n      this.cbId = Math.random()\n        .toString(16)\n        .slice(2);\n    }\n  };\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAmBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;EACA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,GAAAC,KAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAC,QAAA;MACAJ,IAAA,EAAAE,OAAA;MACAC,WAAA;IACA;IACAE,MAAA;MACAL,IAAA,EAAAE,OAAA;MACAC,WAAA;IACA;IACAG,YAAA;MACAN,IAAA,GAAAO,MAAA,EAAAC,MAAA,EAAAP,KAAA;MACAE,WAAA;IACA;IACAH,IAAA;MACAA,IAAA,EAAAO,MAAA;MACAJ,WAAA;IACA;EACA;EACAM,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAhB,KAAA;MACAiB,GAAA,WAAAA,IAAA;QACA,YAAAd,OAAA;MACA;MACAe,GAAA,WAAAA,IAAAC,KAAA;QACA,UAAAJ,OAAA;UACA,KAAAA,OAAA;QACA;QACA,KAAAK,KAAA,UAAAD,KAAA;MACA;IACA;IACAE,WAAA,WAAAA,YAAA;MACA,SAAAZ,MAAA;QACA;MACA;IACA;EACA;EACAa,OAAA,WAAAA,QAAA;IACA,KAAAR,IAAA,GAAAS,IAAA,CAAAC,MAAA,GACAC,QAAA,KACAC,KAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}