{"ast":null,"code":"import _objectSpread from \"/Users/timmuangkeo/Desktop/fork/client-manager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    required: {\n      type: Boolean,\n      description: \"Whether input is required (adds an asterix *)\"\n    },\n    group: {\n      type: Boolean,\n      description: \"Whether input is an input group (manual override in special cases)\"\n    },\n    alternative: {\n      type: Boolean,\n      description: \"Whether input is of alternative layout\"\n    },\n    label: {\n      type: String,\n      description: \"Input label (text before input)\"\n    },\n    error: {\n      type: String,\n      description: \"Input error (below input)\"\n    },\n    successMessage: {\n      type: String,\n      description: \"Input success message\",\n      default: ''\n    },\n    labelClasses: {\n      type: String,\n      description: \"Input label css classes\",\n      default: \"form-control-label\"\n    },\n    inputClasses: {\n      type: String,\n      description: \"Input css classes\"\n    },\n    inputGroupClasses: {\n      type: String,\n      description: \"Input group css classes\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    type: {\n      type: String,\n      description: \"Input type\",\n      default: \"text\"\n    },\n    appendIcon: {\n      type: String,\n      description: \"Append icon (right)\"\n    },\n    prependIcon: {\n      type: String,\n      description: \"Prepend icon (left)\"\n    },\n    rules: {\n      type: [String, Array, Object],\n      description: 'Vee validate validation rules',\n      default: ''\n    },\n    name: {\n      type: String,\n      description: 'Input name (used for validation)',\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      focused: false\n    };\n  },\n  computed: {\n    listeners: function listeners() {\n      return _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur\n      });\n    },\n    slotData: function slotData() {\n      return _objectSpread({\n        focused: this.focused,\n        error: this.error\n      }, this.listeners);\n    },\n    hasIcon: function hasIcon() {\n      var _this$$slots = this.$slots,\n        append = _this$$slots.append,\n        prepend = _this$$slots.prepend;\n      return append !== undefined || prepend !== undefined || this.appendIcon !== undefined || this.prependIcon !== undefined || this.group;\n    }\n  },\n  methods: {\n    updateValue: function updateValue(evt) {\n      var value = evt.target.value;\n      this.$emit(\"input\", value);\n    },\n    onFocus: function onFocus(evt) {\n      this.focused = true;\n      this.$emit(\"focus\", evt);\n    },\n    onBlur: function onBlur(evt) {\n      this.focused = false;\n      this.$emit(\"blur\", evt);\n    }\n  }\n};","map":{"version":3,"names":["inheritAttrs","name","props","required","type","Boolean","description","group","alternative","label","String","error","successMessage","default","labelClasses","inputClasses","inputGroupClasses","value","Number","appendIcon","prependIcon","rules","Array","Object","data","focused","computed","listeners","_objectSpread","$listeners","input","updateValue","focus","onFocus","blur","onBlur","slotData","hasIcon","_this$$slots","$slots","append","prepend","undefined","methods","evt","target","$emit"],"sources":["src/components/Inputs/BaseInput.vue"],"sourcesContent":["<template>\n  <validation-provider :rules=\"rules\" :name=\"name\" v-bind=\"$attrs\" v-slot=\"{errors, valid, invalid, validated}\">\n    <b-form-group>\n      <slot name=\"label\">\n        <label v-if=\"label\" :class=\"labelClasses\">\n          {{label}}\n        </label>\n      </slot>\n      <div :class=\"[\n       {'input-group': hasIcon},\n       {'focused': focused},\n       {'input-group-alternative': alternative},\n       {'has-label': label || $slots.label},\n       inputGroupClasses\n       ]\">\n        <div v-if=\"prependIcon || $slots.prepend\" class=\"input-group-prepend\">\n        <span class=\"input-group-text\">\n          <slot name=\"prepend\">\n            <i :class=\"prependIcon\"></i>\n          </slot>\n        </span>\n        </div>\n        <slot v-bind=\"slotData\">\n          <input\n            :value=\"value\"\n            :type=\"type\"\n            v-on=\"listeners\"\n            v-bind=\"$attrs\"\n            :valid=\"valid\"\n            :required=\"required\"\n            class=\"form-control\"\n            :class=\"[{'is-valid': valid && validated && successMessage}, {'is-invalid': invalid && validated}, inputClasses]\">\n        </slot>\n        <div v-if=\"appendIcon || $slots.append\" class=\"input-group-append\">\n          <span class=\"input-group-text\">\n              <slot name=\"append\">\n                  <i :class=\"appendIcon\"></i>\n              </slot>\n          </span>\n        </div>\n        <slot name=\"infoBlock\"></slot>\n      </div>\n      <slot name=\"success\">\n        <div class=\"valid-feedback\" v-if=\"valid && validated && successMessage\">\n          {{successMessage}}\n        </div>\n      </slot>\n      <slot name=\"error\">\n        <div v-if=\"errors[0]\" class=\"invalid-feedback\" style=\"display: block;\">\n          {{ errors[0] }}\n        </div>\n      </slot>\n    </b-form-group>\n  </validation-provider>\n</template>\n<script>\n  export default {\n    inheritAttrs: false,\n    name: \"base-input\",\n    props: {\n      required: {\n        type: Boolean,\n        description: \"Whether input is required (adds an asterix *)\"\n      },\n      group: {\n        type: Boolean,\n        description: \"Whether input is an input group (manual override in special cases)\"\n      },\n      alternative: {\n        type: Boolean,\n        description: \"Whether input is of alternative layout\"\n      },\n      label: {\n        type: String,\n        description: \"Input label (text before input)\"\n      },\n      error: {\n        type: String,\n        description: \"Input error (below input)\"\n      },\n      successMessage: {\n        type: String,\n        description: \"Input success message\",\n        default: ''\n      },\n      labelClasses: {\n        type: String,\n        description: \"Input label css classes\",\n        default: \"form-control-label\"\n      },\n      inputClasses: {\n        type: String,\n        description: \"Input css classes\"\n      },\n      inputGroupClasses: {\n        type: String,\n        description: \"Input group css classes\"\n      },\n      value: {\n        type: [String, Number],\n        description: \"Input value\"\n      },\n      type: {\n        type: String,\n        description: \"Input type\",\n        default: \"text\"\n      },\n      appendIcon: {\n        type: String,\n        description: \"Append icon (right)\"\n      },\n      prependIcon: {\n        type: String,\n        description: \"Prepend icon (left)\"\n      },\n      rules: {\n        type: [String, Array, Object],\n        description: 'Vee validate validation rules',\n        default: ''\n      },\n      name: {\n        type: String,\n        description: 'Input name (used for validation)',\n        default: ''\n      }\n    },\n    data() {\n      return {\n        focused: false\n      };\n    },\n    computed: {\n      listeners() {\n        return {\n          ...this.$listeners,\n          input: this.updateValue,\n          focus: this.onFocus,\n          blur: this.onBlur\n        };\n      },\n      slotData() {\n        return {\n          focused: this.focused,\n          error: this.error,\n          ...this.listeners\n        };\n      },\n      hasIcon() {\n        const { append, prepend } = this.$slots;\n        return (\n          append !== undefined ||\n          prepend !== undefined ||\n          this.appendIcon !== undefined ||\n          this.prependIcon !== undefined ||\n          this.group\n        );\n      }\n    },\n    methods: {\n      updateValue(evt) {\n        let value = evt.target.value;\n        this.$emit(\"input\", value);\n      },\n      onFocus(evt) {\n        this.focused = true;\n        this.$emit(\"focus\", evt);\n      },\n      onBlur(evt) {\n        this.focused = false;\n        this.$emit(\"blur\", evt);\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;EACAA,YAAA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAE,WAAA;MACAJ,IAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAG,KAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAK,KAAA;MACAP,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAM,cAAA;MACAR,IAAA,EAAAM,MAAA;MACAJ,WAAA;MACAO,OAAA;IACA;IACAC,YAAA;MACAV,IAAA,EAAAM,MAAA;MACAJ,WAAA;MACAO,OAAA;IACA;IACAE,YAAA;MACAX,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAU,iBAAA;MACAZ,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAW,KAAA;MACAb,IAAA,GAAAM,MAAA,EAAAQ,MAAA;MACAZ,WAAA;IACA;IACAF,IAAA;MACAA,IAAA,EAAAM,MAAA;MACAJ,WAAA;MACAO,OAAA;IACA;IACAM,UAAA;MACAf,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAc,WAAA;MACAhB,IAAA,EAAAM,MAAA;MACAJ,WAAA;IACA;IACAe,KAAA;MACAjB,IAAA,GAAAM,MAAA,EAAAY,KAAA,EAAAC,MAAA;MACAjB,WAAA;MACAO,OAAA;IACA;IACAZ,IAAA;MACAG,IAAA,EAAAM,MAAA;MACAJ,WAAA;MACAO,OAAA;IACA;EACA;EACAW,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,OAAAC,aAAA,CAAAA,aAAA,KACA,KAAAC,UAAA;QACAC,KAAA,OAAAC,WAAA;QACAC,KAAA,OAAAC,OAAA;QACAC,IAAA,OAAAC;MAAA;IAEA;IACAC,QAAA,WAAAA,SAAA;MACA,OAAAR,aAAA;QACAH,OAAA,OAAAA,OAAA;QACAd,KAAA,OAAAA;MAAA,GACA,KAAAgB,SAAA;IAEA;IACAU,OAAA,WAAAA,QAAA;MACA,IAAAC,YAAA,QAAAC,MAAA;QAAAC,MAAA,GAAAF,YAAA,CAAAE,MAAA;QAAAC,OAAA,GAAAH,YAAA,CAAAG,OAAA;MACA,OACAD,MAAA,KAAAE,SAAA,IACAD,OAAA,KAAAC,SAAA,IACA,KAAAvB,UAAA,KAAAuB,SAAA,IACA,KAAAtB,WAAA,KAAAsB,SAAA,IACA,KAAAnC,KAAA;IAEA;EACA;EACAoC,OAAA;IACAZ,WAAA,WAAAA,YAAAa,GAAA;MACA,IAAA3B,KAAA,GAAA2B,GAAA,CAAAC,MAAA,CAAA5B,KAAA;MACA,KAAA6B,KAAA,UAAA7B,KAAA;IACA;IACAgB,OAAA,WAAAA,QAAAW,GAAA;MACA,KAAAnB,OAAA;MACA,KAAAqB,KAAA,UAAAF,GAAA;IACA;IACAT,MAAA,WAAAA,OAAAS,GAAA;MACA,KAAAnB,OAAA;MACA,KAAAqB,KAAA,SAAAF,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}